{"version":3,"sources":["app.js","brewery.js","homeCtrl.js","locationService.js","Directives/navDir.js","Directives/searchDir.js","Directives/searchDirCtrl.js","accounts/account.js","accounts/loginCtrl.js","accounts/logoutCtrl.js","accounts/passwordMatch.js","accounts/profileCtrl.js","accounts/signupCtrl.js"],"names":["angular","module","config","$authProvider","$stateProvider","$urlRouterProvider","$locationProvider","skipIfLoggedIn","$q","$auth","deferred","defer","isAuthenticated","reject","resolve","promise","loginRequired","$location","path","$inject","facebook","clientId","google","otherwise","state","url","controller","templateUrl","template","$scope","locationService","addBrewery","breweryAdd","loc","coordinates","searchByAddress","address","then","res","data","longitude","latitude","addedBrewery","brewery","breweryDetails","console","log","service","$http","geolocator","navigator","geolocation","getCurrentPosition","position","error","this","getAddressFromCoords","ret","method","params","lat","coords","long","getBrewery","key","slice","length","directive","restrict","replace","scope","$rootScope","isEmpty","obj","Object","keys","lon","search","location","city","administrativeLevels","level1short","$on","details","factory","getProfile","get","updateProfile","profileData","put","toastr","login","user","success","message","status","authenticate","provider","logout","info","require","otherModelValue","link","element","attributes","ngModel","$validators","compareTo","modelValue","$watch","$validate","Account","response","unlink","signup","setToken"],"mappings":"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","file":"js.min.js","sourcesContent":["angular.module('app', ['ngResource', 'ngMessages', 'ngAnimate', 'ui.router', 'satellizer', 'toastr'])\n\n  .config(function($authProvider, $stateProvider, $urlRouterProvider, $locationProvider) {\n\n    $authProvider.facebook({\n      clientId: '1670205403245071'\n    });\n\n    $authProvider.google({\n      clientId: '696255640250-ha91c7enlsravhptab5c63punfunlh8u.apps.googleusercontent.com'\n    });\n\n    $urlRouterProvider.otherwise(\"/home\");\n\n    $stateProvider\n    .state('home', {\n      url: '/home:name?/:beer?/:near?',\n      controller: 'homeCtrl',\n      templateUrl: 'partials/home.html'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: 'partials/login.html',\n      controller: 'loginCtrl',\n      resolve: {\n        skipIfLoggedIn: skipIfLoggedIn\n      }\n    })\n    .state('signup', {\n      url: '/signup',\n      templateUrl: 'partials/signup.html',\n      controller: 'signupCtrl',\n      resolve: {\n        skipIfLoggedIn: skipIfLoggedIn\n      }\n    })\n    .state('logout', {\n      url: '/logout',\n      template: null,\n      controller: 'logoutCtrl'\n    })\n    .state('profile', {\n      url: '/profile',\n      templateUrl: 'partials/profile.html',\n      controller: 'profileCtrl',\n      resolve: {\n        loginRequired: loginRequired\n      }\n    })\n    .state('addBrewery', {\n      url: '/addBrewery',\n      controller: 'addBrewery',\n      templateUrl: 'partials/addBrewery.html'\n    });\n\n      function skipIfLoggedIn($q, $auth) {\n          var deferred = $q.defer();\n          if ($auth.isAuthenticated()) {\n            deferred.reject();\n          } else {\n            deferred.resolve();\n          }\n          return deferred.promise;\n      }\n\n      function loginRequired($q, $location, $auth) {\n          var deferred = $q.defer();\n          if ($auth.isAuthenticated()) {\n            deferred.resolve();\n          } else {\n            $location.path('/login');\n          }\n          return deferred.promise;\n      }\n\n  });\n","angular.module('app')\n  .controller('addBrewery', function($scope, locationService) {\n\n      $scope.addBrewery = function(breweryAdd){\n        breweryAdd.loc = {};\n        breweryAdd.loc.coordinates = '';\n        locationService.searchByAddress(breweryAdd.address).then(function(res){\n            breweryAdd.loc.coordinates = [res.data[0].longitude, res.data[0].latitude];\n            locationService.addBrewery(breweryAdd).then(function(res){\n              $scope.addedBrewery = res;\n              $scope.brewery = {};\n            });\n        });\n      };\n\n  });\n","angular.module('app')\n  .controller('homeCtrl', function($scope, locationService) {\n\n  $scope.breweryDetails =  function(brewery){\n    console.log(brewery);\n  };\n\n});\n","angular.module('app')\n  .service('locationService', function($http, $q, $location) {\n\n    function geolocator() {\n      var deferred = $q.defer();\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function(position) {\n          deferred.resolve(position);\n        }, function(error) {\n          deferred.reject(error);\n        });\n      }\n      return deferred.promise;\n    }\n\n    this.getAddressFromCoords = function() {\n      var ret = geolocator().then(function(position) {\n        return $http({\n          method: 'GET',\n          params: {\n            lat: position.coords.latitude,\n            long: position.coords.longitude\n          },\n          url: 'http://localhost:3001/getAddress'\n        });\n      });\n      return ret;\n    };\n\n    this.searchByAddress = function(address) {\n      return $http({\n        method: 'GET',\n        params: {\n          address: address\n        },\n        url: 'http://localhost:3001/getCoords'\n      });\n    };\n\n    this.addBrewery = function(brewery) {\n      return $http({\n        method: 'POST',\n        data: brewery,\n        url: 'http://localhost:3001/addBrewery'\n      });\n    };\n\n    this.getBrewery = function(brewery) {\n      if (brewery) {\n        var url = '?';\n        for (var key in brewery) {\n          url += key + \"=\" + brewery[key] + '&';\n        }\n        $location.url(url.slice(0, url.length - 1));\n        return $http({\n          method: 'GET',\n          params: brewery,\n          url: 'http://localhost:3001/getBrewery'\n        });\n      } else\n        return $http({\n          method: 'GET',\n          params: brewery,\n          url: 'http://localhost:3001/getBrewery'\n        });\n    };\n\n  });\n","angular.module('app').directive('navDir', function () {\nreturn {\n      restrict: 'AE',\n      replace: 'true',\n      templateUrl: './partials/Directives/navDir.html',\n      controller: function($scope, $auth){\n        $scope.isAuthenticated = function() {\n          return $auth.isAuthenticated();\n        };\n      }\n  };\n});\n","angular.module('app').directive('searchDir', function () {\nreturn {\n      restrict: 'AE',\n      replace: 'true',\n      templateUrl: './partials/Directives/searchDir.html',\n      controller: 'searchDirCtrl',\n      scope: {\n        brewery: '='\n      }\n  };\n});\n","angular.module('app')\n  .controller('searchDirCtrl', function($scope, locationService, $location, $rootScope) {\n\n    locationService.getAddressFromCoords().then(function(res){\n      $scope.coords = {lat: res.data[0].latitude, lon: res.data[0].longitude};\n      if (!$scope.search) {$scope.search = {};}\n      $scope.search.location = res.data[0].city + ', ' + res.data[0].administrativeLevels.level1short;\n    });\n\n    $rootScope.$on('$locationChangeSuccess', function () {\n        if (!isEmpty($location.search())) {\n            locationService.getBrewery($location.search()).then(function(res){\n              $scope.brewery = res.data;\n            });\n        } else {\n          locationService.getBrewery().then(function(res){\n            $scope.search = {};\n            $scope.brewery = res.data;\n          });\n        }\n    });\n\n    if (isEmpty($location.search())) {\n        locationService.getBrewery().then(function(res){\n          $scope.brewery = res.data;\n        });\n    } else {\n        locationService.getBrewery($location.search()).then(function(res){\n          $scope.search = $location.search();\n          $scope.brewery = res.data;\n        });\n      }\n\n    $scope.getBrewery = function(brewery){\n      locationService.getBrewery(brewery).then(function(res){\n        $scope.brewery = res.data;\n      });\n    };\n\n    $scope.searchByAddress = function(address){\n      locationService.searchByAddress(address).then(function(res){\n        $scope.coords = {lat: res.data[0].latitude, lon: res.data[0].longitude};\n      });\n    };\n\n    $scope.details = function(brewery){\n      console.log(brewery);\n    };\n\n    function isEmpty(obj) {\n      if (Object.keys(obj).length === 0) {return true;} else {return false;}\n    }\n\n  });\n","angular.module('app')\n  .factory('Account', function($http) {\n    return {\n      getProfile: function() {\n        return $http.get('http://localhost:3001/api/me');\n      },\n      updateProfile: function(profileData) {\n        return $http.put('http://localhost:3001/api/me', profileData);\n      }\n    };\n  });\n","angular.module('app')\n  .controller('loginCtrl', function($scope, $location, $auth, toastr) {\n    $scope.login = function() {\n      $auth.login($scope.user)\n        .then(function() {\n          toastr.success('You have successfully signed in!');\n          $location.path('/');\n        })\n        .catch(function(error) {\n          toastr.error(error.data.message, error.status);\n        });\n    };\n    $scope.authenticate = function(provider) {\n      $auth.authenticate(provider)\n        .then(function() {\n          toastr.success('You have successfully signed in with ' + provider + '!');\n          $location.path('/');\n        })\n        .catch(function(error) {\n          if (error.error) {\n            // Popup error - invalid redirect_uri, pressed cancel button, etc.\n            toastr.error(error.error);\n          } else if (error.data) {\n            // HTTP response error from server\n            toastr.error(error.data.message, error.status);\n          } else {\n            toastr.error(error);\n          }\n        });\n    };\n  });\n","angular.module('app')\n  .controller('logoutCtrl', function($location, $auth, toastr) {\n    if (!$auth.isAuthenticated()) { return; }\n    $auth.logout()\n      .then(function() {\n        toastr.info('You have been logged out');\n        $location.path('/');\n      });\n  });\n","angular.module('app')\n  .directive('passwordMatch', function() {\n    return {\n      require: 'ngModel',\n      scope: {\n        otherModelValue: '=passwordMatch'\n      },\n      link: function(scope, element, attributes, ngModel) {\n        ngModel.$validators.compareTo = function(modelValue) {\n          return modelValue === scope.otherModelValue;\n        };\n        scope.$watch('otherModelValue', function() {\n          ngModel.$validate();\n        });\n      }\n    };\n  });\n","angular.module('app')\n  .controller('profileCtrl', function($scope, $auth, toastr, Account) {\n    $scope.getProfile = function() {\n      Account.getProfile()\n        .then(function(response) {\n          $scope.user = response.data;\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.updateProfile = function() {\n      Account.updateProfile($scope.user)\n        .then(function() {\n          toastr.success('Profile has been updated');\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.link = function(provider) {\n      $auth.link(provider)\n        .then(function() {\n          toastr.success('You have successfully linked a ' + provider + ' account');\n          $scope.getProfile();\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.unlink = function(provider) {\n      $auth.unlink(provider)\n        .then(function() {\n          toastr.info('You have unlinked a ' + provider + ' account');\n          $scope.getProfile();\n        })\n        .catch(function(response) {\n          toastr.error(response.data ? response.data.message : 'Could not unlink ' + provider + ' account', response.status);\n        });\n    };\n\n    $scope.getProfile();\n  });\n","angular.module('app')\n  .controller('signupCtrl', function($scope, $location, $auth, toastr) {\n    $scope.signup = function() {\n      $auth.signup($scope.user)\n        .then(function(response) {\n          $auth.setToken(response);\n          $location.path('/');\n          toastr.info('You have successfully created a new account and have been signed-in');\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message);\n        });\n    };\n  });\n"],"sourceRoot":"/source/"}