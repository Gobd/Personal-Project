{"version":3,"sources":["app.js","homeCtrl.js","locationService.js","accounts/account.js","accounts/loginCtrl.js","accounts/logoutCtrl.js","accounts/navbar.js","accounts/passwordMatch.js","accounts/profileCtrl.js","accounts/signupCtrl.js"],"names":["angular","module","config","$authProvider","$stateProvider","$urlRouterProvider","$locationProvider","skipIfLoggedIn","$q","$auth","deferred","defer","isAuthenticated","reject","resolve","promise","loginRequired","$location","path","$inject","facebook","clientId","google","otherwise","state","url","controller","templateUrl","template","$scope","locationService","searchByAddress","address","then","res","coords","lat","data","latitude","lon","longitude","add","brewery","loc","coordinates","addBrewery","service","$http","geolocator","navigator","geolocation","getCurrentPosition","position","error","this","getAddressFromCoords","ret","method","params","long","factory","getProfile","get","updateProfile","profileData","put","toastr","login","user","success","message","status","authenticate","provider","logout","info","directive","require","scope","otherModelValue","link","element","attributes","ngModel","$validators","compareTo","modelValue","$watch","$validate","Account","response","unlink","signup","setToken"],"mappings":"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","file":"js.min.js","sourcesContent":["angular.module('app', ['ngResource', 'ngMessages', 'ngAnimate', 'ui.router', 'satellizer', 'toastr'])\n\n  .config(function($authProvider, $stateProvider, $urlRouterProvider, $locationProvider) {\n\n    $authProvider.facebook({\n      clientId: '1670205403245071'\n    });\n\n    $authProvider.google({\n      clientId: '696255640250-ha91c7enlsravhptab5c63punfunlh8u.apps.googleusercontent.com'\n    });\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n    .state('home', {\n      url: '/',\n      controller: 'homeCtrl',\n      templateUrl: 'partials/home.html'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: 'partials/login.html',\n      controller: 'loginCtrl',\n      resolve: {\n        skipIfLoggedIn: skipIfLoggedIn\n      }\n    })\n    .state('signup', {\n      url: '/signup',\n      templateUrl: 'partials/signup.html',\n      controller: 'signupCtrl',\n      resolve: {\n        skipIfLoggedIn: skipIfLoggedIn\n      }\n    })\n    .state('logout', {\n      url: '/logout',\n      template: null,\n      controller: 'logoutCtrl'\n    })\n    .state('profile', {\n      url: '/profile',\n      templateUrl: 'partials/profile.html',\n      controller: 'profileCtrl',\n      resolve: {\n        loginRequired: loginRequired\n      }\n    })\n    .state('test', {\n      url: '/test',\n      controller: 'homeCtrl',\n      templateUrl: 'partials/test.html'\n    });\n\n      function skipIfLoggedIn($q, $auth) {\n          var deferred = $q.defer();\n          if ($auth.isAuthenticated()) {\n            deferred.reject();\n          } else {\n            deferred.resolve();\n          }\n          return deferred.promise;\n      }\n\n      function loginRequired($q, $location, $auth) {\n          var deferred = $q.defer();\n          if ($auth.isAuthenticated()) {\n            deferred.resolve();\n          } else {\n            $location.path('/login');\n          }\n          return deferred.promise;\n      }\n\n  });\n","angular.module('app')\n  .controller('homeCtrl', function($scope, locationService) {\n\n      // locationService.getAddressFromCoords().then(function(res){\n      //   $scope.respCoords = {lat: res.data[0].latitude, lon: res.data[0].longitude};\n      //   $scope.address = res.data[0].city + ', ' + res.data[0].administrativeLevels.level1short;\n      // });\n\n      $scope.searchByAddress = function(address){\n        locationService.searchByAddress(address).then(function(res){\n          $scope.coords = {lat: res.data[0].latitude, lon: res.data[0].longitude};\n        });\n      };\n\n      $scope.add = function(brewery){\n        brewery.loc = {};\n        brewery.loc.coordinates = '';\n        locationService.searchByAddress(brewery.address).then(function(res){\n            brewery.loc.coordinates = [res.data[0].longitude, res.data[0].latitude];\n            locationService.addBrewery(brewery).then(function(res){\n            });\n        });\n      };\n\n  });\n","angular.module('app')\n  .service('locationService', function($http, $q) {\n\n    function geolocator(){\n            var deferred = $q.defer();\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(function(position){\n                        deferred.resolve(position);\n                }, function (error) {\n                        deferred.reject(error);\n                });\n            }\n            return deferred.promise;\n        }\n\n        this.getAddressFromCoords = function(){\n          var ret = geolocator().then(function(position){\n            return $http({\n              method: 'GET',\n              params: {lat: position.coords.latitude,\n                      long: position.coords.longitude},\n              url: 'http://localhost:3001/getAddress'\n            });\n          });\n          return ret;\n        };\n\n        this.searchByAddress = function(address){\n          return $http({\n            method: 'GET',\n            params: {address: address},\n            url: 'http://localhost:3001/getCoords'\n          });\n        };\n\n        this.addBrewery = function(brewery){\n          return $http({\n            method: 'POST',\n            data: brewery,\n            url: 'http://localhost:3001/addBrewery'\n          });\n        };\n\n  });\n","angular.module('app')\n  .factory('Account', function($http) {\n    return {\n      getProfile: function() {\n        return $http.get('http://localhost:3001/api/me');\n      },\n      updateProfile: function(profileData) {\n        return $http.put('http://localhost:3001/api/me', profileData);\n      }\n    };\n  });\n","angular.module('app')\n  .controller('loginCtrl', function($scope, $location, $auth, toastr) {\n    $scope.login = function() {\n      $auth.login($scope.user)\n        .then(function() {\n          toastr.success('You have successfully signed in!');\n          $location.path('/');\n        })\n        .catch(function(error) {\n          toastr.error(error.data.message, error.status);\n        });\n    };\n    $scope.authenticate = function(provider) {\n      $auth.authenticate(provider)\n        .then(function() {\n          toastr.success('You have successfully signed in with ' + provider + '!');\n          $location.path('/');\n        })\n        .catch(function(error) {\n          if (error.error) {\n            // Popup error - invalid redirect_uri, pressed cancel button, etc.\n            toastr.error(error.error);\n          } else if (error.data) {\n            // HTTP response error from server\n            toastr.error(error.data.message, error.status);\n          } else {\n            toastr.error(error);\n          }\n        });\n    };\n  });\n","angular.module('app')\n  .controller('logoutCtrl', function($location, $auth, toastr) {\n    if (!$auth.isAuthenticated()) { return; }\n    $auth.logout()\n      .then(function() {\n        toastr.info('You have been logged out');\n        $location.path('/');\n      });\n  });\n","angular.module('app')\n  .controller('NavbarCtrl', function($scope, $auth) {\n    $scope.isAuthenticated = function() {\n      return $auth.isAuthenticated();\n    };\n  });\n","angular.module('app')\n  .directive('passwordMatch', function() {\n    return {\n      require: 'ngModel',\n      scope: {\n        otherModelValue: '=passwordMatch'\n      },\n      link: function(scope, element, attributes, ngModel) {\n        ngModel.$validators.compareTo = function(modelValue) {\n          return modelValue === scope.otherModelValue;\n        };\n        scope.$watch('otherModelValue', function() {\n          ngModel.$validate();\n        });\n      }\n    };\n  });\n","angular.module('app')\n  .controller('profileCtrl', function($scope, $auth, toastr, Account) {\n    $scope.getProfile = function() {\n      Account.getProfile()\n        .then(function(response) {\n          $scope.user = response.data;\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.updateProfile = function() {\n      Account.updateProfile($scope.user)\n        .then(function() {\n          toastr.success('Profile has been updated');\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.link = function(provider) {\n      $auth.link(provider)\n        .then(function() {\n          toastr.success('You have successfully linked a ' + provider + ' account');\n          $scope.getProfile();\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.unlink = function(provider) {\n      $auth.unlink(provider)\n        .then(function() {\n          toastr.info('You have unlinked a ' + provider + ' account');\n          $scope.getProfile();\n        })\n        .catch(function(response) {\n          toastr.error(response.data ? response.data.message : 'Could not unlink ' + provider + ' account', response.status);\n        });\n    };\n\n    $scope.getProfile();\n  });\n","angular.module('app')\n  .controller('signupCtrl', function($scope, $location, $auth, toastr) {\n    $scope.signup = function() {\n      $auth.signup($scope.user)\n        .then(function(response) {\n          $auth.setToken(response);\n          $location.path('/');\n          toastr.info('You have successfully created a new account and have been signed-in');\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message);\n        });\n    };\n  });\n"],"sourceRoot":"/source/"}