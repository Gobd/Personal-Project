{"version":3,"sources":["app.js","homeCtrl.js","locationService.js","accounts/account.js","accounts/loginCtrl.js","accounts/logoutCtrl.js","accounts/navbar.js","accounts/passwordMatch.js","accounts/passwordStrength.js","accounts/profileCtrl.js","accounts/signupCtrl.js"],"names":["angular","module","config","$authProvider","$stateProvider","$urlRouterProvider","$locationProvider","skipIfLoggedIn","$q","$auth","deferred","defer","isAuthenticated","reject","resolve","promise","loginRequired","$location","path","$inject","facebook","clientId","google","otherwise","state","url","controller","templateUrl","template","$scope","locationService","searchByAddress","address","then","res","coords","lat","data","latitude","lon","longitude","service","$http","geolocator","navigator","geolocation","getCurrentPosition","position","error","this","getAddressFromCoords","ret","method","params","long","factory","getProfile","get","updateProfile","profileData","put","toastr","login","user","success","message","status","authenticate","provider","logout","info","directive","require","scope","otherModelValue","link","element","attributes","ngModel","$validators","compareTo","modelValue","$watch","$validate","restrict","attrs","indicator","children","dots","Array","prototype","slice","call","weakest","weak","strong","strongest","after","bind","tmp","matches","positive","negative","counts","strength","forEach","el","style","backgroundColor","$viewValue","lower","match","upper","numbers","symbols","middleNumber","middleSymbol","length","numChars","requirements","consecLower","consecUpper","consecNumbers","onlyNumbers","onlyLetters","Math","max","min","round","Account","response","unlink","signup","setToken"],"mappings":"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","file":"js.min.js","sourcesContent":["angular.module('app', ['ngResource', 'ngMessages', 'ngAnimate', 'ui.router', 'satellizer', 'toastr'])\n\n  .config(function($authProvider, $stateProvider, $urlRouterProvider, $locationProvider) {\n\n    $authProvider.facebook({\n      clientId: '1670205403245071'\n    });\n\n    $authProvider.google({\n      clientId: '696255640250-ha91c7enlsravhptab5c63punfunlh8u.apps.googleusercontent.com'\n    });\n\n    $urlRouterProvider.otherwise(\"/\");\n\n    $stateProvider\n    .state('home', {\n      url: '/',\n      controller: 'homeCtrl',\n      templateUrl: 'partials/home.html'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: 'partials/login.html',\n      controller: 'loginCtrl',\n      resolve: {\n        skipIfLoggedIn: skipIfLoggedIn\n      }\n    })\n    .state('signup', {\n      url: '/signup',\n      templateUrl: 'partials/signup.html',\n      controller: 'signupCtrl',\n      resolve: {\n        skipIfLoggedIn: skipIfLoggedIn\n      }\n    })\n    .state('logout', {\n      url: '/logout',\n      template: null,\n      controller: 'logoutCtrl'\n    })\n    .state('profile', {\n      url: '/profile',\n      templateUrl: 'partials/profile.html',\n      controller: 'profileCtrl',\n      resolve: {\n        loginRequired: loginRequired\n      }\n    })\n    .state('test', {\n      url: '/test',\n      controller: 'homeCtrl',\n      templateUrl: 'partials/test.html'\n    });\n\n      function skipIfLoggedIn($q, $auth) {\n          var deferred = $q.defer();\n          if ($auth.isAuthenticated()) {\n            deferred.reject();\n          } else {\n            deferred.resolve();\n          }\n          return deferred.promise;\n      }\n\n      function loginRequired($q, $location, $auth) {\n          var deferred = $q.defer();\n          if ($auth.isAuthenticated()) {\n            deferred.resolve();\n          } else {\n            $location.path('/login');\n          }\n          return deferred.promise;\n      }\n\n  });\n","angular.module('app')\n  .controller('homeCtrl', function($scope, locationService) {\n\n      // locationService.getAddressFromCoords().then(function(res){\n      //   $scope.respCoords = {lat: res.data[0].latitude, lon: res.data[0].longitude};\n      //   $scope.address = res.data[0].city + ', ' + res.data[0].administrativeLevels.level1short;\n      // });\n\n      $scope.searchByAddress = function(address){\n        locationService.searchByAddress(address).then(function(res){\n          $scope.coords = {lat: res.data[0].latitude, lon: res.data[0].longitude};\n        });\n      };\n\n  });\n","angular.module('app')\n  .service('locationService', function($http, $q) {\n\n    function geolocator(){\n            var deferred = $q.defer();\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(function(position){\n                        deferred.resolve(position);\n                }, function (error) {\n                        deferred.reject(error);\n                });\n            }\n            return deferred.promise;\n        }\n\n        this.getAddressFromCoords = function(){\n          var ret = geolocator().then(function(position){\n            return $http({\n              method: 'GET',\n              params: {lat: position.coords.latitude,\n                      long: position.coords.longitude},\n              url: 'http://localhost:3001/getAddress'\n            });\n          });\n          return ret;\n        };\n\n        this.searchByAddress = function(address){\n          return $http({\n            method: 'GET',\n            params: {address: address},\n            url: 'http://localhost:3001/getCoords'\n          });\n        };\n\n  });\n","angular.module('app')\n  .factory('Account', function($http) {\n    return {\n      getProfile: function() {\n        return $http.get('http://localhost:3001/api/me');\n      },\n      updateProfile: function(profileData) {\n        return $http.put('http://localhost:3001/api/me', profileData);\n      }\n    };\n  });\n","angular.module('app')\n  .controller('loginCtrl', function($scope, $location, $auth, toastr) {\n    $scope.login = function() {\n      $auth.login($scope.user)\n        .then(function() {\n          toastr.success('You have successfully signed in!');\n          $location.path('/');\n        })\n        .catch(function(error) {\n          toastr.error(error.data.message, error.status);\n        });\n    };\n    $scope.authenticate = function(provider) {\n      $auth.authenticate(provider)\n        .then(function() {\n          toastr.success('You have successfully signed in with ' + provider + '!');\n          $location.path('/');\n        })\n        .catch(function(error) {\n          if (error.error) {\n            // Popup error - invalid redirect_uri, pressed cancel button, etc.\n            toastr.error(error.error);\n          } else if (error.data) {\n            // HTTP response error from server\n            toastr.error(error.data.message, error.status);\n          } else {\n            toastr.error(error);\n          }\n        });\n    };\n  });\n","angular.module('app')\n  .controller('logoutCtrl', function($location, $auth, toastr) {\n    if (!$auth.isAuthenticated()) { return; }\n    $auth.logout()\n      .then(function() {\n        toastr.info('You have been logged out');\n        $location.path('/');\n      });\n  });\n","angular.module('app')\n  .controller('NavbarCtrl', function($scope, $auth) {\n    $scope.isAuthenticated = function() {\n      return $auth.isAuthenticated();\n    };\n  });\n","angular.module('app')\n  .directive('passwordMatch', function() {\n    return {\n      require: 'ngModel',\n      scope: {\n        otherModelValue: '=passwordMatch'\n      },\n      link: function(scope, element, attributes, ngModel) {\n        ngModel.$validators.compareTo = function(modelValue) {\n          return modelValue === scope.otherModelValue;\n        };\n        scope.$watch('otherModelValue', function() {\n          ngModel.$validate();\n        });\n      }\n    };\n  });\n","angular.module('app')\n  .directive('passwordStrength', function() {\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      link: function(scope, element, attrs, ngModel) {\n        var indicator = element.children();\n        var dots = Array.prototype.slice.call(indicator.children());\n        var weakest = dots.slice(-1)[0];\n        var weak = dots.slice(-2);\n        var strong = dots.slice(-3);\n        var strongest = dots.slice(-4);\n\n        element.after(indicator);\n\n        element.bind('keyup', function() {\n          var matches = {\n                positive: {},\n                negative: {}\n              },\n              counts = {\n                positive: {},\n                negative: {}\n              },\n              tmp,\n              strength = 0,\n              letters = 'abcdefghijklmnopqrstuvwxyz',\n              numbers = '01234567890',\n              symbols = '\\\\!@#$%&/()=?¿',\n              strValue;\n\n          angular.forEach(dots, function(el) {\n            el.style.backgroundColor = '#ebeef1';\n          });\n\n          if (ngModel.$viewValue) {\n            // Increase strength level\n            matches.positive.lower = ngModel.$viewValue.match(/[a-z]/g);\n            matches.positive.upper = ngModel.$viewValue.match(/[A-Z]/g);\n            matches.positive.numbers = ngModel.$viewValue.match(/\\d/g);\n            matches.positive.symbols = ngModel.$viewValue.match(/[$-/:-?{-~!^_`\\[\\]]/g);\n            matches.positive.middleNumber = ngModel.$viewValue.slice(1, -1).match(/\\d/g);\n            matches.positive.middleSymbol = ngModel.$viewValue.slice(1, -1).match(/[$-/:-?{-~!^_`\\[\\]]/g);\n\n            counts.positive.lower = matches.positive.lower ? matches.positive.lower.length : 0;\n            counts.positive.upper = matches.positive.upper ? matches.positive.upper.length : 0;\n            counts.positive.numbers = matches.positive.numbers ? matches.positive.numbers.length : 0;\n            counts.positive.symbols = matches.positive.symbols ? matches.positive.symbols.length : 0;\n\n            counts.positive.numChars = ngModel.$viewValue.length;\n            tmp += (counts.positive.numChars >= 8) ? 1 : 0;\n\n            counts.positive.requirements = (tmp >= 3) ? tmp : 0;\n            counts.positive.middleNumber = matches.positive.middleNumber ? matches.positive.middleNumber.length : 0;\n            counts.positive.middleSymbol = matches.positive.middleSymbol ? matches.positive.middleSymbol.length : 0;\n\n            // Decrease strength level\n            matches.negative.consecLower = ngModel.$viewValue.match(/(?=([a-z]{2}))/g);\n            matches.negative.consecUpper = ngModel.$viewValue.match(/(?=([A-Z]{2}))/g);\n            matches.negative.consecNumbers = ngModel.$viewValue.match(/(?=(\\d{2}))/g);\n            matches.negative.onlyNumbers = ngModel.$viewValue.match(/^[0-9]*$/g);\n            matches.negative.onlyLetters = ngModel.$viewValue.match(/^([a-z]|[A-Z])*$/g);\n\n            counts.negative.consecLower = matches.negative.consecLower ? matches.negative.consecLower.length : 0;\n            counts.negative.consecUpper = matches.negative.consecUpper ? matches.negative.consecUpper.length : 0;\n            counts.negative.consecNumbers = matches.negative.consecNumbers ? matches.negative.consecNumbers.length : 0;\n\n            // Calculations\n            strength += counts.positive.numChars * 4;\n            if (counts.positive.upper) {\n              strength += (counts.positive.numChars - counts.positive.upper) * 2;\n            }\n            if (counts.positive.lower) {\n              strength += (counts.positive.numChars - counts.positive.lower) * 2;\n            }\n            if (counts.positive.upper || counts.positive.lower) {\n              strength += counts.positive.numbers * 4;\n            }\n            strength += counts.positive.symbols * 6;\n            strength += (counts.positive.middleSymbol + counts.positive.middleNumber) * 2;\n            strength += counts.positive.requirements * 2;\n\n            strength -= counts.negative.consecLower * 2;\n            strength -= counts.negative.consecUpper * 2;\n            strength -= counts.negative.consecNumbers * 2;\n\n            if (matches.negative.onlyNumbers) {\n              strength -= counts.positive.numChars;\n            }\n            if (matches.negative.onlyLetters) {\n              strength -= counts.positive.numChars;\n            }\n\n            strength = Math.max(0, Math.min(100, Math.round(strength)));\n\n            if (strength > 85) {\n              angular.forEach(strongest, function(el) {\n                el.style.backgroundColor = '#008cdd';\n              });\n            } else if (strength > 65) {\n              angular.forEach(strong, function(el) {\n                el.style.backgroundColor = '#6ead09';\n              });\n            } else if (strength > 30) {\n              angular.forEach(weak, function(el) {\n                el.style.backgroundColor = '#e09115';\n              });\n            } else {\n              weakest.style.backgroundColor = '#e01414';\n            }\n          }\n        });\n      },\n      template: '<span class=\"password-strength-indicator\"><span></span><span></span><span></span><span></span></span>'\n    };\n  });\n","angular.module('app')\n  .controller('profileCtrl', function($scope, $auth, toastr, Account) {\n    $scope.getProfile = function() {\n      Account.getProfile()\n        .then(function(response) {\n          $scope.user = response.data;\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.updateProfile = function() {\n      Account.updateProfile($scope.user)\n        .then(function() {\n          toastr.success('Profile has been updated');\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.link = function(provider) {\n      $auth.link(provider)\n        .then(function() {\n          toastr.success('You have successfully linked a ' + provider + ' account');\n          $scope.getProfile();\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.unlink = function(provider) {\n      $auth.unlink(provider)\n        .then(function() {\n          toastr.info('You have unlinked a ' + provider + ' account');\n          $scope.getProfile();\n        })\n        .catch(function(response) {\n          toastr.error(response.data ? response.data.message : 'Could not unlink ' + provider + ' account', response.status);\n        });\n    };\n\n    $scope.getProfile();\n  });\n","angular.module('app')\n  .controller('signupCtrl', function($scope, $location, $auth, toastr) {\n    $scope.signup = function() {\n      $auth.signup($scope.user)\n        .then(function(response) {\n          $auth.setToken(response);\n          $location.path('/');\n          toastr.info('You have successfully created a new account and have been signed-in');\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message);\n        });\n    };\n  });\n"],"sourceRoot":"/source/"}