{"version":3,"sources":["app.js","brewery.js","homeCtrl.js","locationService.js","Directives/navDir.js","Directives/searchDir.js","Directives/searchDirCtrl.js","accounts/account.js","accounts/loginCtrl.js","accounts/logoutCtrl.js","accounts/passwordMatch.js","accounts/profileCtrl.js","accounts/signupCtrl.js"],"names":["angular","module","config","$authProvider","$stateProvider","$urlRouterProvider","$locationProvider","skipIfLoggedIn","$q","$auth","deferred","defer","isAuthenticated","reject","resolve","promise","loginRequired","$location","path","$inject","facebook","clientId","google","otherwise","state","url","controller","templateUrl","template","$scope","locationService","addBrewery","breweryAdd","loc","coordinates","searchByAddress","address","then","res","data","longitude","latitude","addedBrewery","brewery","breweryDetails","console","log","service","$http","geolocator","navigator","geolocation","getCurrentPosition","position","error","this","getAddressFromCoords","method","params","lat","coords","long","getBrewery","key","hasOwnProperty","slice","length","directive","restrict","replace","scope","search","goHome","name","beer","firstLoadSearch","lon","location","city","administrativeLevels","level1short","isEmpty","obj","Object","keys","details","factory","getProfile","get","updateProfile","profileData","put","toastr","login","user","success","message","status","authenticate","provider","logout","info","require","otherModelValue","link","element","attributes","ngModel","$validators","compareTo","modelValue","$watch","$validate","Account","response","unlink","signup","setToken"],"mappings":"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","file":"js.min.js","sourcesContent":["angular.module('app', ['ngResource', 'ngMessages', 'ngAnimate', 'ui.router', 'satellizer', 'toastr'])\n\n  .config(function($authProvider, $stateProvider, $urlRouterProvider, $locationProvider) {\n\n    $authProvider.facebook({\n      clientId: '1670205403245071'\n    });\n\n    $authProvider.google({\n      clientId: '696255640250-ha91c7enlsravhptab5c63punfunlh8u.apps.googleusercontent.com'\n    });\n\n    $urlRouterProvider.otherwise(\"/home\");\n\n    $stateProvider\n    .state('home', {\n      url: '/home:name?/:beer?/:near?',\n      controller: 'homeCtrl',\n      templateUrl: 'partials/home.html'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: 'partials/login.html',\n      controller: 'loginCtrl',\n      resolve: {\n        skipIfLoggedIn: skipIfLoggedIn\n      }\n    })\n    .state('signup', {\n      url: '/signup',\n      templateUrl: 'partials/signup.html',\n      controller: 'signupCtrl',\n      resolve: {\n        skipIfLoggedIn: skipIfLoggedIn\n      }\n    })\n    .state('logout', {\n      url: '/logout',\n      template: null,\n      controller: 'logoutCtrl'\n    })\n    .state('profile', {\n      url: '/profile',\n      templateUrl: 'partials/profile.html',\n      controller: 'profileCtrl',\n      resolve: {\n        loginRequired: loginRequired\n      }\n    })\n    .state('addBrewery', {\n      url: '/addBrewery',\n      controller: 'addBrewery',\n      templateUrl: 'partials/addBrewery.html'\n    });\n\n      function skipIfLoggedIn($q, $auth) {\n          var deferred = $q.defer();\n          if ($auth.isAuthenticated()) {\n            deferred.reject();\n          } else {\n            deferred.resolve();\n          }\n          return deferred.promise;\n      }\n\n      function loginRequired($q, $location, $auth) {\n          var deferred = $q.defer();\n          if ($auth.isAuthenticated()) {\n            deferred.resolve();\n          } else {\n            $location.path('/login');\n          }\n          return deferred.promise;\n      }\n\n  });\n","angular.module('app')\n  .controller('addBrewery', function($scope, locationService) {\n\n      $scope.addBrewery = function(breweryAdd){\n        breweryAdd.loc = {};\n        breweryAdd.loc.coordinates = '';\n        locationService.searchByAddress(breweryAdd.address).then(function(res){\n            breweryAdd.loc.coordinates = [res.data[0].longitude, res.data[0].latitude];\n            locationService.addBrewery(breweryAdd).then(function(res){\n              $scope.addedBrewery = res;\n              $scope.brewery = {};\n            });\n        });\n      };\n\n  });\n","angular.module('app')\n  .controller('homeCtrl', function($scope, locationService) {\n\n  $scope.breweryDetails =  function(brewery){\n    console.log(brewery);\n  };\n\n});\n","angular.module('app')\n  .service('locationService', function($http, $q, $location) {\n\n    function geolocator() {\n      var deferred = $q.defer();\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function(position) {\n          deferred.resolve(position);\n        }, function(error) {\n          deferred.reject(error);\n        });\n      }\n      return deferred.promise;\n    }\n\n    this.getAddressFromCoords = function() {\n      return geolocator().then(function(position) {\n        return $http({\n          method: 'GET',\n          params: {\n            lat: position.coords.latitude,\n            long: position.coords.longitude\n          },\n          url: 'http://localhost:3001/getAddress'\n        });\n      });\n    };\n\n    this.searchByAddress = function(address) {\n      return $http({\n        method: 'GET',\n        params: {\n          address: address\n        },\n        url: 'http://localhost:3001/getCoords'\n      });\n    };\n\n    this.addBrewery = function(brewery) {\n      return $http({\n        method: 'POST',\n        data: brewery,\n        url: 'http://localhost:3001/addBrewery'\n      });\n    };\n\n    this.getBrewery = function(brewery) {\n      if (brewery) {\n        var url = '?';\n        for (var key in brewery) {\n            if(brewery.hasOwnProperty(key)) {\n                url += key + \"=\" + brewery[key] + '&';\n            }\n        }\n        $location.url(url.slice(0, url.length - 1));\n        return $http({\n          method: 'GET',\n          params: brewery,\n          url: 'http://localhost:3001/getBrewery'\n        });\n      } else\n        return $http({\n          method: 'GET',\n          params: brewery,\n          url: 'http://localhost:3001/getBrewery'\n        });\n    };\n\n  });\n","angular.module('app').directive('navDir', function () {\nreturn {\n      restrict: 'AE',\n      replace: 'true',\n      scope: {brewery: '=', search: '='},\n      templateUrl: './partials/Directives/navDir.html',\n      controller: function($scope, $auth, locationService){\n            $scope.isAuthenticated = function() {\n              return $auth.isAuthenticated();\n            };\n          $scope.goHome = function(){\n              locationService.getBrewery({}).then(function(res){\n                  $scope.brewery = res.data;\n                  $scope.search.name = '';\n                  $scope.search.beer = '';\n              });\n          };\n      }\n  };\n});\n","angular.module('app').directive('searchDir', function () {\nreturn {\n      restrict: 'AE',\n      replace: 'true',\n      templateUrl: './partials/Directives/searchDir.html',\n      controller: 'searchDirCtrl',\n      scope: {brewery: '=', search: '='}\n  };\n});\n","angular.module('app')\n  .controller('searchDirCtrl', function($scope, locationService, $location) {\n\n    function firstLoadSearch(){\n        locationService.getAddressFromCoords().then(function(res){\n            $scope.coords = {lat: res.data[0].latitude, lon: res.data[0].longitude};\n            $scope.search = {};\n            $scope.search.location = res.data[0].city + ', ' + res.data[0].administrativeLevels.level1short;\n            $scope.getBrewery($scope.search);\n        });\n    }\n\n    if (isEmpty($location.search())) {\n        firstLoadSearch();\n    } else {\n        locationService.getBrewery($location.search()).then(function(res){\n          $scope.search = $location.search();\n          $scope.brewery = res.data;\n        });\n      }\n\n    $scope.getBrewery = function(brewery){\n      locationService.getBrewery(brewery).then(function(res){\n        $scope.brewery = res.data;\n      });\n    };\n\n    $scope.searchByAddress = function(address){\n      locationService.searchByAddress(address).then(function(res){\n        $scope.coords = {lat: res.data[0].latitude, lon: res.data[0].longitude};\n      });\n    };\n\n    $scope.details = function(brewery){\n      console.log(brewery);\n    };\n\n    function isEmpty(obj) {\n      return (Object.keys(obj).length === 0)\n    }\n\n  });\n","angular.module('app')\n  .factory('Account', function($http) {\n    return {\n      getProfile: function() {\n        return $http.get('http://localhost:3001/api/me');\n      },\n      updateProfile: function(profileData) {\n        return $http.put('http://localhost:3001/api/me', profileData);\n      }\n    };\n  });\n","angular.module('app')\n  .controller('loginCtrl', function($scope, $location, $auth, toastr) {\n    $scope.login = function() {\n      $auth.login($scope.user)\n        .then(function() {\n          toastr.success('You have successfully signed in!');\n          $location.path('/');\n        })\n        .catch(function(error) {\n          toastr.error(error.data.message, error.status);\n        });\n    };\n    $scope.authenticate = function(provider) {\n      $auth.authenticate(provider)\n        .then(function() {\n          toastr.success('You have successfully signed in with ' + provider + '!');\n          $location.path('/');\n        })\n        .catch(function(error) {\n          if (error.error) {\n            // Popup error - invalid redirect_uri, pressed cancel button, etc.\n            toastr.error(error.error);\n          } else if (error.data) {\n            // HTTP response error from server\n            toastr.error(error.data.message, error.status);\n          } else {\n            toastr.error(error);\n          }\n        });\n    };\n  });\n","angular.module('app')\n  .controller('logoutCtrl', function($location, $auth, toastr) {\n    if (!$auth.isAuthenticated()) { return; }\n    $auth.logout()\n      .then(function() {\n        toastr.info('You have been logged out');\n        $location.path('/');\n      });\n  });\n","angular.module('app')\n  .directive('passwordMatch', function() {\n    return {\n      require: 'ngModel',\n      scope: {\n        otherModelValue: '=passwordMatch'\n      },\n      link: function(scope, element, attributes, ngModel) {\n        ngModel.$validators.compareTo = function(modelValue) {\n          return modelValue === scope.otherModelValue;\n        };\n        scope.$watch('otherModelValue', function() {\n          ngModel.$validate();\n        });\n      }\n    };\n  });\n","angular.module('app')\n  .controller('profileCtrl', function($scope, $auth, toastr, Account) {\n    $scope.getProfile = function() {\n      Account.getProfile()\n        .then(function(response) {\n          $scope.user = response.data;\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.updateProfile = function() {\n      Account.updateProfile($scope.user)\n        .then(function() {\n          toastr.success('Profile has been updated');\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.link = function(provider) {\n      $auth.link(provider)\n        .then(function() {\n          toastr.success('You have successfully linked a ' + provider + ' account');\n          $scope.getProfile();\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.unlink = function(provider) {\n      $auth.unlink(provider)\n        .then(function() {\n          toastr.info('You have unlinked a ' + provider + ' account');\n          $scope.getProfile();\n        })\n        .catch(function(response) {\n          toastr.error(response.data ? response.data.message : 'Could not unlink ' + provider + ' account', response.status);\n        });\n    };\n\n    $scope.getProfile();\n  });\n","angular.module('app')\n  .controller('signupCtrl', function($scope, $location, $auth, toastr) {\n    $scope.signup = function() {\n      $auth.signup($scope.user)\n        .then(function(response) {\n          $auth.setToken(response);\n          $location.path('/');\n          toastr.info('You have successfully created a new account and have been signed-in');\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message);\n        });\n    };\n  });\n"],"sourceRoot":"/source/"}