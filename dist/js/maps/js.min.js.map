{"version":3,"sources":["app.js","brewery.js","homeCtrl.js","locationService.js","accounts/account.js","accounts/loginCtrl.js","accounts/logoutCtrl.js","accounts/passwordMatch.js","accounts/profileCtrl.js","accounts/signupCtrl.js","navDir/navDir.js","navDir/navDir2.js","navDir/navbar.js"],"names":["angular","module","config","$authProvider","$stateProvider","$urlRouterProvider","$locationProvider","skipIfLoggedIn","$q","$auth","deferred","defer","isAuthenticated","reject","resolve","promise","loginRequired","$location","path","$inject","facebook","clientId","google","otherwise","state","url","controller","templateUrl","template","$scope","locationService","addBrewery","brewery","loc","coordinates","searchByAddress","address","then","res","data","longitude","latitude","addedBrewery","breweryDetails","console","log","service","$http","geolocator","navigator","geolocation","getCurrentPosition","position","error","this","getAddressFromCoords","ret","method","params","lat","coords","long","getBrewery","key","slice","length","factory","getProfile","get","updateProfile","profileData","put","toastr","login","user","success","message","status","authenticate","provider","logout","info","directive","require","scope","otherModelValue","link","element","attributes","ngModel","$validators","compareTo","modelValue","$watch","$validate","Account","response","unlink","signup","setToken","restrict","replace","$rootScope","isEmpty","obj","Object","keys","lon","search","location","city","administrativeLevels","level1short","$on","details"],"mappings":"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","file":"js.min.js","sourcesContent":["angular.module('app', ['ngResource', 'ngMessages', 'ngAnimate', 'ui.router', 'satellizer', 'toastr'])\n\n  .config(function($authProvider, $stateProvider, $urlRouterProvider, $locationProvider) {\n\n    $authProvider.facebook({\n      clientId: '1670205403245071'\n    });\n\n    $authProvider.google({\n      clientId: '696255640250-ha91c7enlsravhptab5c63punfunlh8u.apps.googleusercontent.com'\n    });\n\n    $urlRouterProvider.otherwise(\"/home\");\n\n    $stateProvider\n    .state('home', {\n      url: '/home:name?/:beer?/:near?',\n      controller: 'homeCtrl',\n      templateUrl: 'partials/home.html'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: 'partials/login.html',\n      controller: 'loginCtrl',\n      resolve: {\n        skipIfLoggedIn: skipIfLoggedIn\n      }\n    })\n    .state('signup', {\n      url: '/signup',\n      templateUrl: 'partials/signup.html',\n      controller: 'signupCtrl',\n      resolve: {\n        skipIfLoggedIn: skipIfLoggedIn\n      }\n    })\n    .state('logout', {\n      url: '/logout',\n      template: null,\n      controller: 'logoutCtrl'\n    })\n    .state('profile', {\n      url: '/profile',\n      templateUrl: 'partials/profile.html',\n      controller: 'profileCtrl',\n      resolve: {\n        loginRequired: loginRequired\n      }\n    })\n    .state('addBrewery', {\n      url: '/addBrewery',\n      controller: 'addBrewery',\n      templateUrl: 'partials/addBrewery.html'\n    });\n\n      function skipIfLoggedIn($q, $auth) {\n          var deferred = $q.defer();\n          if ($auth.isAuthenticated()) {\n            deferred.reject();\n          } else {\n            deferred.resolve();\n          }\n          return deferred.promise;\n      }\n\n      function loginRequired($q, $location, $auth) {\n          var deferred = $q.defer();\n          if ($auth.isAuthenticated()) {\n            deferred.resolve();\n          } else {\n            $location.path('/login');\n          }\n          return deferred.promise;\n      }\n\n  });\n","angular.module('app')\n  .controller('addBrewery', function($scope, locationService) {\n\n      $scope.addBrewery = function(brewery){\n        brewery.loc = {};\n        brewery.loc.coordinates = '';\n        locationService.searchByAddress(brewery.address).then(function(res){\n            brewery.loc.coordinates = [res.data[0].longitude, res.data[0].latitude];\n            locationService.addBrewery(brewery).then(function(res){\n              $scope.addedBrewery = res;\n              $scope.brewery = {};\n            });\n        });\n      };\n\n  });\n","angular.module('app')\n  .controller('homeCtrl', function($scope, locationService) {\n\n  $scope.breweryDetails =  function(brewery){\n    console.log(brewery);\n  };\n\n});\n","angular.module('app')\n  .service('locationService', function($http, $q, $location) {\n\n    function geolocator() {\n      var deferred = $q.defer();\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function(position) {\n          deferred.resolve(position);\n        }, function(error) {\n          deferred.reject(error);\n        });\n      }\n      return deferred.promise;\n    }\n\n    this.getAddressFromCoords = function() {\n      var ret = geolocator().then(function(position) {\n        return $http({\n          method: 'GET',\n          params: {\n            lat: position.coords.latitude,\n            long: position.coords.longitude\n          },\n          url: 'http://localhost:3001/getAddress'\n        });\n      });\n      return ret;\n    };\n\n    this.searchByAddress = function(address) {\n      return $http({\n        method: 'GET',\n        params: {\n          address: address\n        },\n        url: 'http://localhost:3001/getCoords'\n      });\n    };\n\n    this.addBrewery = function(brewery) {\n      return $http({\n        method: 'POST',\n        data: brewery,\n        url: 'http://localhost:3001/addBrewery'\n      });\n    };\n\n    this.getBrewery = function(brewery) {\n      if (brewery) {\n        var url = '?';\n        for (var key in brewery) {\n          url += key + \"=\" + brewery[key] + '&';\n        }\n        $location.url(url.slice(0, url.length - 1));\n        return $http({\n          method: 'GET',\n          params: brewery,\n          url: 'http://localhost:3001/getBrewery'\n        });\n      } else\n        return $http({\n          method: 'GET',\n          params: brewery,\n          url: 'http://localhost:3001/getBrewery'\n        });\n    };\n\n  });\n","angular.module('app')\n  .factory('Account', function($http) {\n    return {\n      getProfile: function() {\n        return $http.get('http://localhost:3001/api/me');\n      },\n      updateProfile: function(profileData) {\n        return $http.put('http://localhost:3001/api/me', profileData);\n      }\n    };\n  });\n","angular.module('app')\n  .controller('loginCtrl', function($scope, $location, $auth, toastr) {\n    $scope.login = function() {\n      $auth.login($scope.user)\n        .then(function() {\n          toastr.success('You have successfully signed in!');\n          $location.path('/');\n        })\n        .catch(function(error) {\n          toastr.error(error.data.message, error.status);\n        });\n    };\n    $scope.authenticate = function(provider) {\n      $auth.authenticate(provider)\n        .then(function() {\n          toastr.success('You have successfully signed in with ' + provider + '!');\n          $location.path('/');\n        })\n        .catch(function(error) {\n          if (error.error) {\n            // Popup error - invalid redirect_uri, pressed cancel button, etc.\n            toastr.error(error.error);\n          } else if (error.data) {\n            // HTTP response error from server\n            toastr.error(error.data.message, error.status);\n          } else {\n            toastr.error(error);\n          }\n        });\n    };\n  });\n","angular.module('app')\n  .controller('logoutCtrl', function($location, $auth, toastr) {\n    if (!$auth.isAuthenticated()) { return; }\n    $auth.logout()\n      .then(function() {\n        toastr.info('You have been logged out');\n        $location.path('/');\n      });\n  });\n","angular.module('app')\n  .directive('passwordMatch', function() {\n    return {\n      require: 'ngModel',\n      scope: {\n        otherModelValue: '=passwordMatch'\n      },\n      link: function(scope, element, attributes, ngModel) {\n        ngModel.$validators.compareTo = function(modelValue) {\n          return modelValue === scope.otherModelValue;\n        };\n        scope.$watch('otherModelValue', function() {\n          ngModel.$validate();\n        });\n      }\n    };\n  });\n","angular.module('app')\n  .controller('profileCtrl', function($scope, $auth, toastr, Account) {\n    $scope.getProfile = function() {\n      Account.getProfile()\n        .then(function(response) {\n          $scope.user = response.data;\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.updateProfile = function() {\n      Account.updateProfile($scope.user)\n        .then(function() {\n          toastr.success('Profile has been updated');\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.link = function(provider) {\n      $auth.link(provider)\n        .then(function() {\n          toastr.success('You have successfully linked a ' + provider + ' account');\n          $scope.getProfile();\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message, response.status);\n        });\n    };\n    $scope.unlink = function(provider) {\n      $auth.unlink(provider)\n        .then(function() {\n          toastr.info('You have unlinked a ' + provider + ' account');\n          $scope.getProfile();\n        })\n        .catch(function(response) {\n          toastr.error(response.data ? response.data.message : 'Could not unlink ' + provider + ' account', response.status);\n        });\n    };\n\n    $scope.getProfile();\n  });\n","angular.module('app')\n  .controller('signupCtrl', function($scope, $location, $auth, toastr) {\n    $scope.signup = function() {\n      $auth.signup($scope.user)\n        .then(function(response) {\n          $auth.setToken(response);\n          $location.path('/');\n          toastr.info('You have successfully created a new account and have been signed-in');\n        })\n        .catch(function(response) {\n          toastr.error(response.data.message);\n        });\n    };\n  });\n","angular.module('app').directive('navDir', function () {\nreturn {\n      restrict: 'AE',\n      replace: 'true',\n      templateUrl: './partials/navDir.html',\n      controller: 'NavbarCtrl',\n      scope: {\n        brewery: '='\n      }\n  };\n});\n","angular.module('app').directive('navDir2', function () {\nreturn {\n      restrict: 'AE',\n      replace: 'true',\n      templateUrl: './partials/navDir2.html',\n      controller: 'NavbarCtrl'\n  };\n});\n","angular.module('app')\n  .controller('NavbarCtrl', function($scope, $auth, locationService, $location, $rootScope) {\n\n    $scope.isAuthenticated = function() {\n      return $auth.isAuthenticated();\n    };\n\n    locationService.getAddressFromCoords().then(function(res){\n      $scope.coords = {lat: res.data[0].latitude, lon: res.data[0].longitude};\n      if (!$scope.search) {$scope.search = {};}\n      $scope.search.location = res.data[0].city + ', ' + res.data[0].administrativeLevels.level1short;\n    });\n\n    $rootScope.$on('$locationChangeSuccess', function () {\n        if (!isEmpty($location.search())) {\n            locationService.getBrewery($location.search()).then(function(res){\n              $scope.brewery = res.data;\n            });\n        } else {\n          locationService.getBrewery().then(function(res){\n            $scope.search = {};\n            $scope.brewery = res.data;\n          });\n        }\n    });\n\n    if (isEmpty($location.search())) {\n        locationService.getBrewery().then(function(res){\n          $scope.brewery = res.data;\n        });\n    } else {\n        locationService.getBrewery($location.search()).then(function(res){\n          $scope.search = $location.search();\n          $scope.brewery = res.data;\n        });\n      }\n\n    $scope.getBrewery = function(brewery){\n      locationService.getBrewery(brewery).then(function(res){\n        $scope.brewery = res.data;\n      });\n    };\n\n    $scope.searchByAddress = function(address){\n      locationService.searchByAddress(address).then(function(res){\n        $scope.coords = {lat: res.data[0].latitude, lon: res.data[0].longitude};\n      });\n    };\n\n    $scope.details = function(brewery){\n      console.log(brewery);\n    };\n\n    function isEmpty(obj) {\n      if (Object.keys(obj).length === 0) {return true;} else {return false;}\n    }\n\n  });\n"],"sourceRoot":"/source/"}